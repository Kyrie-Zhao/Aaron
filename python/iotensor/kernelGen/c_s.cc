#define TVM_EXPORTS
#include "tvm/runtime/c_runtime_api.h"
#include "tvm/runtime/c_backend_api.h"
#include <math.h>
void* __tvm_module_ctx = NULL;
#ifdef __cplusplus
extern "C"
#endif
TVM_DLL int32_t fused_layout_transform_2(void* args, void* arg_type_ids, int32_t num_args, void* out_ret_value, void* out_ret_tcode, void* resource_handle) {
  void* arg0 = (((TVMValue*)args)[0].v_handle);
  int32_t arg0_code = ((int32_t*)arg_type_ids)[(0)];
  void* arg1 = (((TVMValue*)args)[1].v_handle);
  int32_t arg1_code = ((int32_t*)arg_type_ids)[(1)];
  void* placeholder = (((DLTensor*)arg0)[0].data);
  void* arg0_shape = (((DLTensor*)arg0)[0].shape);
  void* arg0_strides = (((DLTensor*)arg0)[0].strides);
  int32_t dev_id = (((DLTensor*)arg0)[0].ctx.device_id);
  void* T_layout_trans = (((DLTensor*)arg1)[0].data);
  void* arg1_shape = (((DLTensor*)arg1)[0].shape);
  void* arg1_strides = (((DLTensor*)arg1)[0].strides);
  if (!(arg0_strides == NULL)) {
  }
  if (!(arg1_strides == NULL)) {
  }
  for (int32_t ax0_ax1_fused = 0; ax0_ax1_fused < 512; ++ax0_ax1_fused) {
    for (int32_t ax2 = 0; ax2 < 26; ++ax2) {
      for (int32_t ax3_outer = 0; ax3_outer < 2; ++ax3_outer) {
        for (int32_t ax3_inner_s = 0; ax3_inner_s < 16; ++ax3_inner_s) {
          if (((ax3_outer * 16) + ax3_inner_s) < 26) {
            ((float*)T_layout_trans)[(((((ax0_ax1_fused * 676) + (ax2 * 26)) + (ax3_outer * 16)) + ax3_inner_s))] = ((float*)placeholder)[(((((((ax0_ax1_fused >> 3) * 5408) + (ax2 * 208)) + (ax3_outer * 128)) + (ax3_inner_s * 8)) + (ax0_ax1_fused & 7)))];
          }
        }
      }
    }
  }
  return 0;
}

#ifdef __cplusplus
extern "C"
#endif
TVM_DLL int32_t fused_nn_contrib_conv2d_NCHWc_add(void* args, void* arg_type_ids, int32_t num_args, void* out_ret_value, void* out_ret_tcode, void* resource_handle) {
  void* arg0 = (((TVMValue*)args)[0].v_handle);
  int32_t arg0_code = ((int32_t*)arg_type_ids)[(0)];
  void* arg1 = (((TVMValue*)args)[1].v_handle);
  int32_t arg1_code = ((int32_t*)arg_type_ids)[(1)];
  void* arg2 = (((TVMValue*)args)[2].v_handle);
  int32_t arg2_code = ((int32_t*)arg_type_ids)[(2)];
  void* arg3 = (((TVMValue*)args)[3].v_handle);
  int32_t arg3_code = ((int32_t*)arg_type_ids)[(3)];
  void* placeholder = (((DLTensor*)arg0)[0].data);
  void* arg0_shape = (((DLTensor*)arg0)[0].shape);
  void* arg0_strides = (((DLTensor*)arg0)[0].strides);
  int32_t dev_id = (((DLTensor*)arg0)[0].ctx.device_id);
  void* placeholder1 = (((DLTensor*)arg1)[0].data);
  void* arg1_shape = (((DLTensor*)arg1)[0].shape);
  void* arg1_strides = (((DLTensor*)arg1)[0].strides);
  void* placeholder2 = (((DLTensor*)arg2)[0].data);
  void* arg2_shape = (((DLTensor*)arg2)[0].shape);
  void* arg2_strides = (((DLTensor*)arg2)[0].strides);
  void* T_add = (((DLTensor*)arg3)[0].data);
  void* arg3_shape = (((DLTensor*)arg3)[0].shape);
  void* arg3_strides = (((DLTensor*)arg3)[0].strides);
  if (!(arg0_strides == NULL)) {
  }
  if (!(arg1_strides == NULL)) {
  }
  if (!(arg2_strides == NULL)) {
  }
  if (!(arg3_strides == NULL)) {
  }
  for (int32_t ax0_ax1_fused_ax2_fused = 0; ax0_ax1_fused_ax2_fused < 1664; ++ax0_ax1_fused_ax2_fused) {
    float8 conv2d_NCHWc_global[26];
    conv2d_NCHWc_global[0] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[1] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[2] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[3] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[4] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[5] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[6] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[7] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[8] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[9] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[10] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[11] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[12] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[13] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[14] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[15] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[16] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[17] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[18] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[19] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[20] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[21] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[22] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[23] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[24] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    conv2d_NCHWc_global[25] = ((float8)(0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f, 0.000000e+00f));
    for (int32_t kh = 0; kh < 3; ++kh) {
      for (int32_t kw = 0; kw < 3; ++kw) {
        conv2d_NCHWc_global[0] = (conv2d_NCHWc_global[0] + (((float8)(((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))], ((float*)placeholder)[((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[1] = (conv2d_NCHWc_global[1] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 1))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[2] = (conv2d_NCHWc_global[2] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 2))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[3] = (conv2d_NCHWc_global[3] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 3))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[4] = (conv2d_NCHWc_global[4] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 4))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[5] = (conv2d_NCHWc_global[5] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 5))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[6] = (conv2d_NCHWc_global[6] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 6))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[7] = (conv2d_NCHWc_global[7] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 7))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[8] = (conv2d_NCHWc_global[8] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 8))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[9] = (conv2d_NCHWc_global[9] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 9))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[10] = (conv2d_NCHWc_global[10] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 10))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[11] = (conv2d_NCHWc_global[11] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 11))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[12] = (conv2d_NCHWc_global[12] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 12))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[13] = (conv2d_NCHWc_global[13] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 13))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[14] = (conv2d_NCHWc_global[14] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 14))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[15] = (conv2d_NCHWc_global[15] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 15))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[16] = (conv2d_NCHWc_global[16] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 16))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[17] = (conv2d_NCHWc_global[17] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 17))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[18] = (conv2d_NCHWc_global[18] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 18))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[19] = (conv2d_NCHWc_global[19] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 19))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[20] = (conv2d_NCHWc_global[20] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 20))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[21] = (conv2d_NCHWc_global[21] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 21))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[22] = (conv2d_NCHWc_global[22] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 22))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[23] = (conv2d_NCHWc_global[23] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 23))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[24] = (conv2d_NCHWc_global[24] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 24))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
        conv2d_NCHWc_global[25] = (conv2d_NCHWc_global[25] + (((float8)(((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))], ((float*)placeholder)[(((((((ax0_ax1_fused_ax2_fused / 104) * 784) + (kh * 28)) + ((ax0_ax1_fused_ax2_fused % 26) * 28)) + kw) + 25))])) * ((float8*)((float*)placeholder1 + ((((((ax0_ax1_fused_ax2_fused % 104) / 26) * 72) + (kh * 24)) + (kw * 8)))))[0]));
      }
    }
    for (int32_t ax3_inner = 0; ax3_inner < 26; ++ax3_inner) {
      ((float8*)((float*)T_add + (((ax0_ax1_fused_ax2_fused * 208) + (ax3_inner * 8)))))[0] = (((float8*)((float*)conv2d_NCHWc_global + ((ax3_inner * 8))))[0] + ((float8*)((float*)placeholder2 + ((((ax0_ax1_fused_ax2_fused % 104) / 26) * 8))))[0]);
    }
  }
  return 0;
}

#ifdef __cplusplus
extern "C"
#endif
TVM_DLL int32_t fused_layout_transform_3(void* args, void* arg_type_ids, int32_t num_args, void* out_ret_value, void* out_ret_tcode, void* resource_handle) {
  void* arg0 = (((TVMValue*)args)[0].v_handle);
  int32_t arg0_code = ((int32_t*)arg_type_ids)[(0)];
  void* arg1 = (((TVMValue*)args)[1].v_handle);
  int32_t arg1_code = ((int32_t*)arg_type_ids)[(1)];
  void* placeholder = (((DLTensor*)arg0)[0].data);
  void* arg0_shape = (((DLTensor*)arg0)[0].shape);
  void* arg0_strides = (((DLTensor*)arg0)[0].strides);
  int32_t dev_id = (((DLTensor*)arg0)[0].ctx.device_id);
  void* T_layout_trans = (((DLTensor*)arg1)[0].data);
  void* arg1_shape = (((DLTensor*)arg1)[0].shape);
  void* arg1_strides = (((DLTensor*)arg1)[0].strides);
  if (!(arg0_strides == NULL)) {
  }
  if (!(arg1_strides == NULL)) {
  }
  for (int32_t ax0_ax1_fused_ax2_fused = 0; ax0_ax1_fused_ax2_fused < 448; ++ax0_ax1_fused_ax2_fused) {
    for (int32_t ax3 = 0; ax3 < 28; ++ax3) {
      ((float*)T_layout_trans)[(((ax0_ax1_fused_ax2_fused * 28) + ax3))] = ((float*)placeholder)[(((ax0_ax1_fused_ax2_fused * 28) + ax3))];
    }
  }
  return 0;
}

